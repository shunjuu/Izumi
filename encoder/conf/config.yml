# This is the port this application will listen on.
# [type: Integer]
listen-port: 80

# You can optionally load a global config from a web source
# If you do not, leave this as an empty-string.
# [type: String-URL]
web-config: ""

# Authorization files must be stored locally.

# Grouping body for encoding specifics
encoding:

  # The encoding flags for ffmpeg to use. 
  # To not use any flags, leave this as an empty string.
  encode-flags: "-y -nostdin -strict -2 -loglevel panic"
  # To specify number of threads for each job, also include it here.

  # This system supports encoding multiple videos at once (done by threads).
  # Enter the number (as an integer) for how many jobs can be supported by the host CPU
  # at once, or at user preference. This number must be greater than or equal to 1.
  encode-jobs: 1

# Grouping body to specify where to download files from
downloading:

  # A list of rclone strings for Encoding to attempt to download the episode
  # from. The first listing that's marked to have the file will be downloaded
  # from.
  # [type: A list of strings]
  download-sources:
    - "rclone_config:source/"

  # This is an optional parameter to specify a source folder in case
  # all of the download soures have their final folders as the same name.
  softsub-folder-name: "Airing"

  # Flags to be used in the rclone uploading prompt. Determines verbosity of rclone.
  rclone-flags: "--stats 1s --stats-one-line --progress"

# Grouping body to specify the names when uploading files
uploading:

  # A list of rclone strings for Encoding to upload the completed encode to
  # There must be at least one destination listed. Usually this is just
  # one element, but multiple are supported in lieu of Distribution.
  # [type: A list of strings]
  upload-destinations:
    - "rclone_config:folder/"

  # This is an optional parameter which allows you to specify the name of
  # an "Airing [Hardsub]" folder. It's recommended you use this parameter
  # instead of tacking it onto each upload-destination.
  hardsub-folder-name: "Airing [Hardsub]"

  # Flags to be used in the rclone uploading prompt. Determines verbosity of rclone.
  rclone-flags: "--stats 1s --stats-one-line --progress"

# Grouping body to list endpoints for other Izumi modules for this app to talk to.
endpoints:

  # The endpoints to send U3 Notification requests.
  # url represents the URL to request to. It should contain http header
  # auth is an optional authorization key to send the request to.
  # auth can be ommitted.
  # To specify none, simply have always/sequential as empty lists ([])
  notifiers:

    # These urls will always be notified, regardless of their failure state
    always:
      - url: "https://endpoint1.url/notify"
        auth: "authorization_key1"
      - url: "https://endpoint2.url/notify"

    # For each group, try each url until one is successful
    sequential:
      group1:
        - url: "https://endpoint1.url/notify"
          auth: "authorization_key1"
        - url: "https://endpoint2.url/notify"
      group2:
        - url: "https://endpoint3.url/notify"
          auth: "authorization_key3"
        - url: "https://endpoint4.url/notify"


  # The endpoints to send U4 Distributor requests.
  # url represents the URL to request to. It should contain http header
  # auth is an optional authorization key to send the request to.
  # auth can be ommitted.
  # To specify none, simply have always/sequential as empty lists ([])
  distributors:

    # These urls will always be notified, regardless of their failure state
    always:
      - url: "https://endpoint1.url/notify"
        auth: "authorization_key1"
      - url: "https://endpoint2.url/notify"

    # For each group, try each url until one is successful
    sequential:
      group1:
        - url: "https://endpoint1.url/notify"
          auth: "authorization_key1"
        - url: "https://endpoint2.url/notify"
      group2:
        - url: "https://endpoint3.url/notify"
          auth: "authorization_key3"
        - url: "https://endpoint4.url/notify"

# Application-specific settings
system:

  # The identifier for this system
  name: "izumi"

  # Whether or not the application should print more information.
  # [type: Boolean]
  verbose: yes

  # Logging settings
  logging:

    # The style of the log output messages, using %(var)s style
    logfmt: "[%(name)s] (%(levelname)s) %(asctime)s: %(message)s"
    # The strftime-style format for %(asctime)s
    datefmt: "%a|%b%y %X %Z"
