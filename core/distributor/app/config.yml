# This is the port the application will listen on.
# [type: Integer]
listen-port: 8080

# Authorization files must be stored locally

# You can optionally load a global config from a web source
# If you do not, leave this as an empty string
# [type: string]
web-config: ""

# Grouping body for distribution specifics
distribution:

  # How many distribution jobs should be run at one given time 
  # [type: Integer]
  jobs: 1

  # Distribution can be optionally filtered based on given anilist or mal profiles
  # If a given show is found on any provided profile (inclusive or), it is considered
  # currently watching.
  filters:

    # For all filters, leave as empty string if not used
    # The string should be the username as it appears on the site
    # e.g., "anilist: 'anilist_user'"

    anilist: ""
    myanimelist: ""

# Grouping body to specify where to download files from
downloading:

  # Flags to be used in the rclone uploading prompt. Determines verbosity of rclone.
  rclone-flags: "--stats 1s --stats-one-line --progress"

  # Hardsub sources
  hardsub:
    - "rclone_config:hardsub_folder/"

  # Softsub sources
  softsub:
    - "rclone_config:softsub_folder"
    - "airisu:/home/rocia/Desktop/Airing"

# Grouping body to specify the names when uploading files
uploading:

  # Flags to be used in the rclone uploading prompt. Determines verbosity of rclone.
  rclone-flags: "--stats 1s --stats-one-line --progress"

  # Hardsub sources
  hardsub:
    - "rclone_config:folderh/"

  # Softsub sources
  softsub:
    - "rclone_config:folders"

# Grouping body to list endpoints for other Izumi modules for this app to talk to.
endpoints:

  # All modules use and accept the same formatted request
  # Thus, there is no need to "group" each type of request

  # [always] URLs will always be POST'd, regardless of the response
  # To have no URLs in this list, use an empty list, i.e.:
  # always: []
  always:
    - url: "https://endpoint1.url/notify"
      auth: "authorization_key1"
    - url: "https://endpoint2.url/encode"
    - url: "https://endpoint3.url/distribute"

  # [sequential] URLs are sorted into groups.
  # For each group, the URLs will be tested in order until one of them succeeds.
  # All the groups will be tested.
  # To specify no groups, use an empty dict, i.e.:
  # sequential: {}
  sequential:
    group1:
      - url: "https://endpoint1.url/notify"
        auth: "authorization_key1"
      - url: "https://endpoint2.url/notify"
    group2:
      - url: "https://endpoint3.url/distribute"
      
# Application-specifc settings
system:

  # The identifier for this system
  # [type: String]
  name: "izumi"

  # Whether or not hte application should print more information
  # [type: Boolean]
  verbose: yes

  # Logging settings
  logging:

    # The style of the log output messages, using %(var)s style
    logfmt: "[%(name)s] (%(levelname)s) %(asctime)s: %(message)s"
    # The strftime-style format for %(asctime)s
    datefmt: "%a|%b%y %X %Z"
